---
layout: post
title: "CLRS - Ch2.2 - Analyzing Algorithm"
date: 2013-07-31 22:07
comments: true
keywords: CLRS
description:
categories: CLRS读书笔记
tags: [Algorithm, CLRS]
published: true
---

前面的介绍略过不再记录，直接来看对于Insertion Sort的分析。

### 1.Analysis of insertion sort - 对插入排序的分析
衡量一个算法的好坏，重要的标准之一当然就是解决问题所需的时间的多少了，通常情况下都是希望运行越快越好。而算法的运行时间并不是固定的，它根据输入数据量的大小而变化。所以通常建立一个以输入数据量大小（input size）$$n$$为自变量的函数来表示算法的运行时间（running time）。

`Input size`的定义并不是固定不变的，对于前面提到的插入排序来说，$$n$$无非就是数组的大小。对于乘法来说，由于计算机的电子特性，一般用乘数的二进制位数作为衡量。而对于一个图论算法来讲，输入的数据量可能同时由图的节点(Vertices)和边(Edges)两个量组成。

`Running time`在这里暂时被定义为算法对于某一特定输入所需要执行的`操作数量`，或者说是所需执行的`步数`，这就把算法的运行时间和具体的计算机独立了开来，所以并不以算法在某一特定电脑上的运行时间为标准来定义算法的运行时间。


假设每一行的操作都需要花费常数项的时间$$C_i$$，接下来我们就可以来分析一下插入排序了。

其实CLRS这里的定义略显繁琐，比我在《Data Structure and Algorithm Analysis in C》中看到的描述要复杂上一些，因为其书中将每一个基本操作定义为相同的常数项时间（当然其实乘法所需的时间远大于加法），每一行可以含有多个基本操作，比如for循环的那一行就含有一次赋值，一次比较，与一次自增。而CLRS将每一行所需时间定义为一个常数项，那么有多少行就得有多少个常数项。

--未完待续--
